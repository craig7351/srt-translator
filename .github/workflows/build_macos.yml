name: Build macOS App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
    
    - name: Build with PyInstaller
      run: |
        python -m PyInstaller srt_translator.spec
    
    - name: Create DMG
      run: |
        chmod +x create_dmg.sh
        ./create_dmg.sh
    
    - name: Upload DMG as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: SRT_Translator-macOS
        path: SRT_Translator-1.0.dmg
        
    - name: Print GitHub Context Variables
      run: |
        echo "GitHub Context Variables:"
        echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
        echo "GITHUB_RUN_ID: $GITHUB_RUN_ID"
        echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER"
        echo "GITHUB_SHA: $GITHUB_SHA"
        echo "GITHUB_REF: $GITHUB_REF"
        echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
        echo "GITHUB_WORKFLOW: $GITHUB_WORKFLOW"
        echo "GITHUB_ACTOR: $GITHUB_ACTOR"
        echo "GITHUB_EVENT_PATH: $GITHUB_EVENT_PATH"
        echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
        echo "GITHUB_ENV: $GITHUB_ENV"
    
    - name: Print Environment Variables
      run: |
        echo "Environment Variables in $GITHUB_ENV:"
        cat $GITHUB_ENV  # 打印 $GITHUB_ENV 的内容

    - name: Load Environment Variables
      run: |
        echo "VERSION=$(cat .env | grep VERSION | cut -d '=' -f2)" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        files: SRT_Translator-1.0.dmg
        tag_name: v${{ github.sha }}
        name: Release ${{ github.sha }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}